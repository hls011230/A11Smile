{
	"id": "faefa5ab5d9071ef7f61b44796c16112",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test,sol.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract Test{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test,sol.sol": {
				"Test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test,sol.sol\":27:50  contract Test{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test,sol.sol\":27:50  contract Test{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b864bae800404d22c1da60b14d5e06fcc852a80e7e836f04d938c5f15ae8aafd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b864bae800404d22c1da60b14d5e06fcc852a80e7e836f04d938c5f15ae8aafd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH5 0xBAE800404D 0x22 0xC1 0xDA PUSH1 0xB1 0x4D 0x5E MOD 0xFC 0xC8 MSTORE 0xA8 0xE PUSH31 0x836F04D938C5F15AE8AAFD64736F6C63430008070033000000000000000000 ",
							"sourceMap": "27:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b864bae800404d22c1da60b14d5e06fcc852a80e7e836f04d938c5f15ae8aafd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 PUSH5 0xBAE800404D 0x22 0xC1 0xDA PUSH1 0xB1 0x4D 0x5E MOD 0xFC 0xC8 MSTORE 0xA8 0xE PUSH31 0x836F04D938C5F15AE8AAFD64736F6C63430008070033000000000000000000 ",
							"sourceMap": "27:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b864bae800404d22c1da60b14d5e06fcc852a80e7e836f04d938c5f15ae8aafd64736f6c63430008070033",
									".code": [
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test,sol.sol\":\"Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test,sol.sol\":{\"keccak256\":\"0x15823451d7b99669a1a5156045924c9288c765b472a34a10e52eafc85c5c32a3\",\"urls\":[\"bzz-raw://9e9b1d5ffa917d06c6e1d9f14fe73fee53d080b09289c5edffff92aea24f1d38\",\"dweb:/ipfs/QmcfquSadBdpuuQdpLhCyQMWCG26uzk94MD1j3BiVNvdJy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> test,sol.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "test,sol.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"test,sol.sol": {
				"ast": {
					"absolutePath": "test,sol.sol",
					"exportedSymbols": {
						"Test": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Test",
							"nameLocation": "36:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:23:0",
							"usedErrors": []
						}
					],
					"src": "0:50:0"
				},
				"id": 0
			}
		}
	}
}